{"title":"Tidy Evaluation Guide - Overview","markdown":{"yaml":{"title":"Tidy Evaluation Guide - Overview","subtitle":"Data Masking","author":"Priyanka Gagneja","date":"2023-05-10","categories":["news","code","analysis"],"image":"image.jpg","code-annotations":"hover","css":"styles.css","format":{"revealjs":{"incremental":true,"theme":"solarized"}}},"headingText":"Programming variables","containsRefs":false,"markdown":"\n\n\n-   **Environment** variable - variables that live inside environments.\n\n-   **Data** variable - variables stored in data frames.\n\n## Data Masking\n\nIt is a feature that lets you *blend programming variables*.\n\nEasily to refer to data frame columns -\n\n-   as **columns** itself, or\n\n-   as **objects** defined in the current environment.\n\n```{r, echo=FALSE}\nlibrary(dplyr)\n```\n\n```{r, echo=TRUE}\nx <- 100\nmtcars %>% \n  dplyr::summarise(mean(disp / x))\n```\n\n## But!!\n\n```{r, echo=TRUE}\n# create a dataframe\n(df <- data.frame(x = NA, y = 2))\n\n# create a variable\n(x <- 100)\n\n# divide the column y by 100.\ndf %>% \n  dplyr::mutate(y = y / x)\n```\n\n## But!!\n\n::: columns\n::: {.column width=\"50%\"}\n```{r, echo=TRUE}\n# create a dataframe               \n(df <- data.frame(x = NA, y = 2))       \n\n# create a variable\n(x <- 100)                              \n\n# divide the column y by 100.\ndf %>% \n  dplyr::mutate(y = y / x)\n```\n:::\n\n::: {.column width=\"50%\"}\n::: callout-note\n## Data Variable\n:::\n\n::: callout-note\n## Environment Variable\n:::\n:::\n:::\n\n::: callout-caution\n## Collision\n\nA collision leads to this unexpected behavior\n:::\n\n## Collisions\n\nA collision occurs when there exists an object in the environment and a column in data frame have same name.\n\n-   Column - when you actually wanted to use the object.\n\n    ```{r, echo=TRUE}\n    df <- data.frame(x = NA, y = 2)\n    x <- 100\n\n    df %>% dplyr::mutate(y = y / x)\n    ```\n\n-   Object - when you actually wanted to use the column.\n\n::: columns\n::: {.column width=\"50%\"}\n```{r, echo=TRUE}\ndf <- data.frame(x = \"right\")\nxx <- \"wrong\"\n\ndf %>% \n  dplyr::mutate(foo = toupper(xx))\n\n```\n:::\n\n::: {.column width=\"50%\"}\n```{r, echo=TRUE}\ndf %>% \n  dplyr::mutate(foo = toupper(x))\n```\n:::\n:::\n\n## How to prevent collisions\n\n**BE EXPLICIT**\n\n```{r}\ndf <- data.frame(x = 1, y = 2)\nx <- 100\n```\n\n-   Use .data and .env pronouns\\\n.data refers to the dataframe in the latest state before the pipe. \n\n```{r, echo=TRUE, eval=FALSE}\ndf %>% dplyr::mutate(y = .data$y / .env$x)\n```\n\n-   Subsetting .data with env-variables\\\n\n```{r, echo=TRUE, eval=FALSE}\nvar <- \"cyl\"\nmtcars %>% dplyr::summarise(mean = mean(.data[[var]]))\n```\n\n::: callout-note\n## .data pronoun can only be subsetted with env-variables, not data-variables.\n\n[[ behaves like an !!(injection operator)\n:::\n\n\n\n-   Injecting env-variables with !!\n\n```{r, echo=TRUE}\ndf %>% dplyr::mutate(y = y / !!x)\n```\n\n## Questions\n\n::: callout-note\nTechnically, this is because [[ behaves like an injection operator when applied to .data. It is evaluated very early before the data mask is even created.\n:::\n\n\n::: callout-note\nInjection operators such as !! **modify a piece of code early on** by injecting objects or other expressions **before any data-masking logic comes into play**. If you inject the value of a variable, it becomes inlined in the expression. R no longer needs to look up any variable to find the value.\n:::\n\n\n\n## Tidy Selections\n\n-   Dialect of R that optimises column selection in tidyverse packages.\n\n-   No ambiguity due to its implementation.\n\n    -   Evaluation of expressions is **either scoped in the data mask only**, or *in the environment only*.\n\n-   Examples - dplyr::select() and tidyr::pivot_longer().\n\n- Tidy selections distinguish data-expressions and env-expressions:\n\ndata is a data-expression that refers to the data-variable.\n\nncol(data) is an env-expression that refers to the env-variable.\n\n## Names pattern with all_of()\n\n- `all_of()` is often used in functions as a programming pattern that connects column names to a data mask, similarly to the .data pronoun. \n```{r}\nmy_group_by <- function(data, vars) {\n  data %>% dplyr::group_by(across(all_of(vars)))\n}\n```\n\n- `all_of()` is an env-expression that is evaluated outside of the data mask, so there is no possibility of collisions.\n\n```{r}\n\n```\n"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","css":["styles.css"],"incremental":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.2.335","auto-stretch":true,"editor":"visual","title-block-banner":true,"title":"Tidy Evaluation Guide - Overview","subtitle":"Data Masking","author":"Priyanka Gagneja","date":"2023-05-10","categories":["news","code","analysis"],"image":"image.jpg","code-annotations":"hover","theme":"solarized"}}}}